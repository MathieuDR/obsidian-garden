name: Build, Push, and Cleanup Docker Images

on:
  workflow_dispatch:
  repository_dispatch:
    types: [content-update]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PACKAGE_NAME: ${{ github.event.repository.name }}

jobs:
  update-submodule:
    runs-on: ubuntu-latest
    if: github.event_name == 'repository_dispatch'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Update submodule
        run: |
          git submodule init
          git submodule update
          cd content
          git pull origin main
          cd ..
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add content
          git commit -m "Update Obsidian submodule"
          git push

  build-push-and-cleanup:
    needs: [update-submodule]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: true
        token: ${{ secrets.PAT_TOKEN }}

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          APP_VERSION=${{ github.sha }}

    - name: Delete old images
      uses: actions/delete-package-versions@v5
      with:
        package-name: ${{ env.PACKAGE_NAME }}
        package-type: 'container'
        min-versions-to-keep: 3

    - name: Update VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
            deploy_image ghcr.io/${{ env.IMAGE_NAME }} latest podman-garden
